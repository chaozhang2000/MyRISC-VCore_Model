                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_STATUS, "rptr", 0), rptr);
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_STATUS, "wptr", 0), wptr);

                issue_stbuf_read_addr = tdb.get_uint32(DOMAIN_INPUT, "issue_stbuf_read_addr", 0);
                issue_stbuf_read_size = tdb.get_uint32(DOMAIN_INPUT, "issue_stbuf_read_size", 0);
                issue_stbuf_rd = tdb.get_uint8(DOMAIN_INPUT, "issue_stbuf_rd", 0);
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "stbuf_exlsu_bus_data", 0), stbuf_exlsu_bus_data);
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "stbuf_exlsu_bus_data_feedback", 0), stbuf_exlsu_bus_data_feedback);
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "stbuf_exlsu_bus_ready", 0), stbuf_exlsu_bus_ready);

                exlsu_stbuf_rob_id = tdb.get_uint8(DOMAIN_INPUT, "exlsu_stbuf_rob_id", 0);
                exlsu_stbuf_write_addr = tdb.get_uint32(DOMAIN_INPUT, "exlsu_stbuf_write_addr", 0);
                exlsu_stbuf_write_size = tdb.get_uint8(DOMAIN_INPUT, "exlsu_stbuf_write_size", 0);
                exlsu_stbuf_write_data = tdb.get_uint32(DOMAIN_INPUT, "exlsu_stbuf_write_data", 0);
                exlsu_stbuf_push = tdb.get_uint8(DOMAIN_INPUT, "exlsu_stbuf_push", 0);
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "stbuf_exlsu_full", 0), stbuf_exlsu_full);

                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "stbuf_bus_read_addr", 0), stbuf_bus_read_addr);
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "stbuf_bus_write_addr", 0), stbuf_bus_write_addr);
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "stbuf_bus_read_size", 0), stbuf_bus_read_size);
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "stbuf_bus_write_size", 0), stbuf_bus_write_size);
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "stbuf_bus_data", 0), stbuf_bus_data);
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "stbuf_bus_read_req", 0), stbuf_bus_read_req);
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "stbuf_bus_write_req", 0), stbuf_bus_write_req);
                bus_stbuf_data = tdb.get_uint32(DOMAIN_INPUT, "bus_stbuf_data", 0);
                bus_stbuf_read_ack = tdb.get_uint8(DOMAIN_INPUT, "bus_stbuf_read_ack", 0);
                bus_stbuf_write_ack = tdb.get_uint8(DOMAIN_INPUT, "bus_stbuf_write_ack", 0);

                commit_feedback_pack.enable = tdb.get_uint8(DOMAIN_INPUT, "commit_feedback_pack.enable", 0);
                commit_feedback_pack.flush = tdb.get_uint8(DOMAIN_INPUT, "commit_feedback_pack.flush", 0);
                
                for(i = 0;i < `COMMIT_WIDTH;i++) begin
                    commit_feedback_pack[i].committed_rob_id = tdb.get_uint8(DOMAIN_INPUT, "commit_feedback_pack.committed_rob_id", i);
                    commit_feedback_pack[i].committed_rob_id_valid = tdb.get_uint8(DOMAIN_INPUT, "commit_feedback_pack.committed_rob_id_valid", i);
                end

