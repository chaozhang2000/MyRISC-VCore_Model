                fetch_bus_addr_cur = tdb.get_uint32(DOMAIN_INPUT, "fetch_bus_addr_cur", 0);
                fetch_bus_read_req_cur = tdb.get_uint8(DOMAIN_INPUT, "fetch_bus_read_req_cur", 0);
                
                for(i = 0;i < `FETCH_WIDTH;i++) begin
                    `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_fetch_data", i), bus_fetch_data[i])
                end

                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_fetch_read_ack", 0), bus_fetch_read_ack)

                stbuf_bus_read_addr_cur = tdb.get_uint32(DOMAIN_INPUT, "stbuf_bus_read_addr_cur", 0);
                stbuf_bus_write_addr = tdb.get_uint32(DOMAIN_INPUT, "stbuf_bus_write_addr", 0);
                stbuf_bus_read_size_cur = tdb.get_uint8(DOMAIN_INPUT, "stbuf_bus_read_size_cur", 0);
                stbuf_bus_write_size = tdb.get_uint8(DOMAIN_INPUT, "stbuf_bus_write_size", 0);
                stbuf_bus_data = tdb.get_uint32(DOMAIN_INPUT, "stbuf_bus_data", 0);
                stbuf_bus_read_req_cur = tdb.get_uint8(DOMAIN_INPUT, "stbuf_bus_read_req_cur", 0);
                stbuf_bus_write_req = tdb.get_uint8(DOMAIN_INPUT, "stbuf_bus_write_req", 0);
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_stbuf_data", 0), bus_stbuf_data)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_stbuf_read_ack", 0), bus_stbuf_read_ack)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_stbuf_write_ack_next", 0), bus_stbuf_write_ack_next)

                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_tcm_fetch_addr_cur", 0), bus_tcm_fetch_addr_cur)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_tcm_fetch_rd_cur", 0), bus_tcm_fetch_rd_cur)
                
                for(i = 0;i < `FETCH_WIDTH;i++) begin
                    tcm_bus_fetch_data[i] = tdb.get_uint32(DOMAIN_INPUT, "tcm_bus_fetch_data", i);
    
                end

                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_tcm_stbuf_read_addr_cur", 0), bus_tcm_stbuf_read_addr_cur)
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_tcm_stbuf_write_addr", 0), bus_tcm_stbuf_write_addr)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_tcm_stbuf_read_size_cur", 0), bus_tcm_stbuf_read_size_cur)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_tcm_stbuf_write_size", 0), bus_tcm_stbuf_write_size)
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_tcm_stbuf_data", 0), bus_tcm_stbuf_data)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_tcm_stbuf_rd_cur", 0), bus_tcm_stbuf_rd_cur)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_tcm_stbuf_wr", 0), bus_tcm_stbuf_wr)
                tcm_bus_stbuf_data = tdb.get_uint32(DOMAIN_INPUT, "tcm_bus_stbuf_data", 0);

                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_clint_read_addr_cur", 0), bus_clint_read_addr_cur)
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_clint_write_addr", 0), bus_clint_write_addr)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_clint_read_size_cur", 0), bus_clint_read_size_cur)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_clint_write_size", 0), bus_clint_write_size)
                `assert_equal(cur_cycle, tdb.get_uint32(DOMAIN_OUTPUT, "bus_clint_data", 0), bus_clint_data)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_clint_rd_cur", 0), bus_clint_rd_cur)
                `assert_equal(cur_cycle, tdb.get_uint8(DOMAIN_OUTPUT, "bus_clint_wr", 0), bus_clint_wr)
                clint_bus_data = tdb.get_uint32(DOMAIN_INPUT, "clint_bus_data", 0);
