                this->tdb.mark_signal(trace::domain_t::output, "rob_rename_new_id", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_rename_new_id_valid", sizeof(uint8_t), RENAME_WIDTH);
                
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.new_phy_reg_id", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.old_phy_reg_id", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.old_phy_reg_id_valid", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.finish", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.pc", sizeof(uint32_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.inst_value", sizeof(uint32_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.has_exception", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.exception_id", sizeof(uint32_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.exception_value", sizeof(uint32_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.predicted", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.predicted_jump", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.predicted_next_pc", sizeof(uint32_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.checkpoint_id_valid", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.checkpoint_id", sizeof(uint16_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.bru_op", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.bru_jump", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.bru_next_pc", sizeof(uint32_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.is_mret", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.csr_addr", sizeof(uint16_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.csr_newvalue", sizeof(uint32_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data.csr_newvalue_valid", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_data_valid", sizeof(uint8_t), RENAME_WIDTH);
                this->tdb.mark_signal(trace::domain_t::input, "rename_rob_push", sizeof(uint8_t), 1);

                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
		        this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.new_phy_reg_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.old_phy_reg_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.old_phy_reg_id_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.finish", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.inst_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.has_exception", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.exception_id", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.exception_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.predicted", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.predicted_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.predicted_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.checkpoint_id_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.checkpoint_id", sizeof(uint16_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.bru_op", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.bru_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.bru_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.is_mret", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.csr_addr", sizeof(uint16_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.csr_newvalue", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data.csr_newvalue_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.new_phy_reg_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.old_phy_reg_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.old_phy_reg_id_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.finish", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.inst_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.has_exception", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.exception_id", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.exception_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.predicted", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.predicted_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.predicted_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.checkpoint_id_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.checkpoint_id", sizeof(uint16_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.bru_op", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.bru_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.bru_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.is_mret", sizeof(uint8_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.csr_addr", sizeof(uint16_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.csr_newvalue", sizeof(uint32_t), EXECUTE_UNIT_NUM);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_input_data.csr_newvalue_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
		        this->tdb.mark_signal(trace::domain_t::input, "commit_rob_input_data_we", sizeof(uint8_t), EXECUTE_UNIT_NUM);

                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_head_id", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_head_id_valid" ,sizeof(uint8_t), 1);

                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_retire_id", sizeof(uint8_t), COMMIT_WIDTH);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.new_phy_reg_id", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.old_phy_reg_id", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.old_phy_reg_id_valid", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.finish", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.pc", sizeof(uint32_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.inst_value", sizeof(uint32_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.has_exception", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.exception_id", sizeof(uint32_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.exception_value", sizeof(uint32_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.predicted", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.predicted_jump", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.predicted_next_pc", sizeof(uint32_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.checkpoint_id_valid", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.checkpoint_id", sizeof(uint16_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.bru_op", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.bru_jump", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.bru_next_pc", sizeof(uint32_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.is_mret", sizeof(uint8_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.csr_addr", sizeof(uint16_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.csr_newvalue", sizeof(uint32_t), COMMIT_WIDTH);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_data.csr_newvalue_valid", sizeof(uint8_t), COMMIT_WIDTH);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_retire_id_valid", sizeof(uint8_t), COMMIT_WIDTH);
		        this->tdb.mark_signal(trace::domain_t::input, "commit_rob_retire_pop", sizeof(uint8_t), COMMIT_WIDTH);

                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_next_id", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_next_id_valid", sizeof(uint8_t), 1);

                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_tail_id", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_tail_id_valid", sizeof(uint8_t), 1);

                this->tdb.mark_signal(trace::domain_t::input, "commit_rob_flush_id", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.new_phy_reg_id", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.old_phy_reg_id", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.old_phy_reg_id_valid", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.finish", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.pc", sizeof(uint32_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.inst_value", sizeof(uint32_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.has_exception", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.exception_id", sizeof(uint32_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.exception_value", sizeof(uint32_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.predicted", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.predicted_jump", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.predicted_next_pc", sizeof(uint32_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.checkpoint_id_valid", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.checkpoint_id", sizeof(uint16_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.bru_op", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.bru_jump", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.bru_next_pc", sizeof(uint32_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.is_mret", sizeof(uint8_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.csr_addr", sizeof(uint16_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.csr_newvalue", sizeof(uint32_t), 1);
                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_data.csr_newvalue_valid", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_next_id", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_flush_next_id_valid", sizeof(uint8_t), 1);

                this->tdb.mark_signal(trace::domain_t::output, "rob_commit_empty", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::output, "rob_commit_full", sizeof(uint8_t), 1);
		        this->tdb.mark_signal(trace::domain_t::input, "commit_rob_flush", sizeof(uint8_t), 1);