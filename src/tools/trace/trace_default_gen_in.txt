        this->tdb.mark_signal(trace::domain_t::output, "wb_phyf_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_phyf_data", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_phyf_we", sizeof(uint8_t), 1);
        
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.enable", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rob_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.imm", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.has_exception", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.exception_id", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.exception_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.predicted", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.predicted_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.predicted_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.checkpoint_id_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.checkpoint_id", sizeof(uint16_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.bru_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.bru_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rs1", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.arg1_src", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rs1_need_map", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rs1_phy", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.src1_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.src1_loaded", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rs2", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.arg2_src", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rs2_need_map", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rs2_phy", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.src2_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.src2_loaded", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rd", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rd_enable", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.need_rename", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rd_phy", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.rd_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.csr", sizeof(uint16_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.csr_newvalue", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.csr_newvalue_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.op", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.op_unit", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "execute_wb_port_data_out.sub_op", sizeof(uint8_t), EXECUTE_UNIT_NUM);

        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.enable", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rob_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.imm", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.has_exception", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.exception_id", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.exception_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.predicted", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.predicted_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.predicted_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.checkpoint_id_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.checkpoint_id", sizeof(uint16_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.bru_jump", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.bru_next_pc", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rs1", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.arg1_src", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rs1_need_map", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rs1_phy", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.src1_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.src1_loaded", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rs2", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.arg2_src", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rs2_need_map", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rs2_phy", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.src2_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.src2_loaded", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rd", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rd_enable", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.need_rename", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rd_phy", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.rd_value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.csr", sizeof(uint16_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.csr_newvalue", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.csr_newvalue_valid", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.op", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.op_unit", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_data_in.sub_op", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_we", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "wb_commit_port_flush", sizeof(uint8_t), 1);
    
        this->tdb.mark_signal(trace::domain_t::output, "wb_feedback_pack.enable", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_feedback_pack.phy_id", sizeof(uint8_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::output, "wb_feedback_pack.value", sizeof(uint32_t), EXECUTE_UNIT_NUM);
        this->tdb.mark_signal(trace::domain_t::input, "commit_feedback_pack.enable", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::input, "commit_feedback_pack.flush", sizeof(uint8_t), 1);