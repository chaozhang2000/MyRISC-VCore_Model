        this->tdb.mark_signal(trace::domain_t::output, "rename_cpbuf_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal_bitmap(trace::domain_t::output, "rename_cpbuf_data.rat_phy_map_table_valid", PHY_REG_NUM, RENAME_WIDTH);
        this->tdb.mark_signal_bitmap(trace::domain_t::output, "rename_cpbuf_data.rat_phy_map_table_visible", PHY_REG_NUM, RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_cpbuf_data.global_history", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_cpbuf_data.local_history", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_cpbuf_we", sizeof(uint8_t), 1);
        this->tdb.mark_signal_bitmap(trace::domain_t::input, "cpbuf_rename_data.rat_phy_map_table_valid", PHY_REG_NUM, RENAME_WIDTH);
        this->tdb.mark_signal_bitmap(trace::domain_t::input, "cpbuf_rename_data.rat_phy_map_table_visible", PHY_REG_NUM, RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "cpbuf_rename_data.global_history", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "cpbuf_rename_data.local_history", sizeof(uint16_t), RENAME_WIDTH);

        this->tdb.mark_signal(trace::domain_t::input, "rat_rename_new_phy_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "rat_rename_new_phy_id_valid", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rat_phy_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rat_phy_id_valid", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rat_arch_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rat_map", sizeof(uint8_t), 1);

        this->tdb.mark_signal_bitmap(trace::domain_t::input, "rat_rename_map_table_valid", PHY_REG_NUM, 1);
        this->tdb.mark_signal_bitmap(trace::domain_t::input, "rat_rename_map_table_visible", PHY_REG_NUM, 1);

        this->tdb.mark_signal(trace::domain_t::output, "rename_rat_read_arch_id", sizeof(uint8_t), RENAME_WIDTH * 2);
        this->tdb.mark_signal(trace::domain_t::input, "rat_rename_read_phy_id", sizeof(uint8_t), RENAME_WIDTH * 2);

        this->tdb.mark_signal(trace::domain_t::input, "rob_rename_new_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "rob_rename_new_id_valid", sizeof(uint8_t), 1);

        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.new_phy_reg_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.old_phy_reg_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.old_phy_reg_id_valid", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.finish", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.pc", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.inst_value", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.has_exception", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.exception_id", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.exception_value", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.predicted", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.predicted_jump", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.predicted_next_pc", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.checkpoint_id_valid", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.checkpoint_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.bru_op", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.bru_jump", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.bru_next_pc", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.is_mret", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.csr_addr", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.csr_newvalue", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data.csr_newvalue_valid", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_data_valid", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "rename_rob_push", sizeof(uint8_t), 1);

        this->tdb.mark_signal(trace::domain_t::output, "rename_csrf_phy_regfile_full_add", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "rename_csrf_rob_full_add", sizeof(uint8_t), 1);
        
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.enable", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.value", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.valid", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.pc", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.imm", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.has_exception", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.exception_id", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.exception_value", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.predicted", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.predicted_jump", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.predicted_next_pc", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.checkpoint_id_valid", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.checkpoint_id", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.rs1", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.arg1_src", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.rs1_need_map", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.rs2", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.arg2_src", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.rs2_need_map", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.rd", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.rd_enable", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.need_rename", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.csr", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.op", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.op_unit", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out.sub_op", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::input, "decode_rename_fifo_data_out_valid", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "decode_rename_fifo_data_pop_valid", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "decode_rename_fifo_pop", sizeof(uint8_t), 1);

        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.enable", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.value", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.valid", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rob_id", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.pc", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.imm", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.has_exception", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.exception_id", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.exception_value", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.predicted", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.predicted_jump", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.predicted_next_pc", sizeof(uint32_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.checkpoint_id_valid", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.checkpoint_id", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rs1", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.arg1_src", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rs1_need_map", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rs1_phy", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rs2", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.arg2_src", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rs2_need_map", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rs2_phy", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rd", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rd_enable", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.need_rename", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.rd_phy", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.csr", sizeof(uint16_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.op", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.op_unit", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_data_in.sub_op", sizeof(uint8_t), RENAME_WIDTH);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_we", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "rename_readreg_port_flush", sizeof(uint8_t), 1);

        this->tdb.mark_signal(trace::domain_t::output, "rename_feedback_pack.idle", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::output, "issue_feedback_pack.stall", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::input, "commit_feedback_pack.enable", sizeof(uint8_t), 1);
        this->tdb.mark_signal(trace::domain_t::input, "commit_feedback_pack.flush", sizeof(uint8_t), 1);